<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:components="com.aristobot.flexmobile.components.*"
		title="Messages"
		creationComplete="init()">
	
	
	<fx:Metadata>
		[Style(name="linkColor", format="Color", type="uint", inherit="no")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.aristobot.data.SystemMessage;
			import com.aristobot.flexmobile.model.ImageManager;
			import com.aristobot.flexmobile.model.ViewModel;
			
			import flashx.textLayout.elements.TextFlow;
			
			import spark.components.supportClasses.StyleableTextField;
			
			[Bindable]
			protected var message:SystemMessage;
			
			protected var textFlow:TextFlow;
			
			protected var vm:ViewModel = ViewModel.getInstance();
			
			protected static const HTML_SPACER:String = "<p> </p>";
			
			protected function init():void
			{
				var linkColor:uint = getStyle("linkColor");
				var styles:String = "a { color:#"+linkColor.toString(16)+";}";
				var myStyleSheet:StyleSheet = new StyleSheet();
				myStyleSheet.parseCSS(styles);
				
				var textDisplay:StyleableTextField = t1.textDisplay as StyleableTextField;
				textDisplay.styleSheet = myStyleSheet;
								
				if (message){
					textDisplay.htmlText = message.body;
				}
				
			}
			
			override public function set data(value:Object):void
			{
				message = value as SystemMessage;
				
				//Add additional paragraph spacing if necessary
				if (message.body.indexOf(HTML_SPACER) < 0)
				{
					var split:Array = message.body.split("</p><p>");
					var newBody:String = "";
					for each (var subString:String in split){
						newBody += subString+"</p>"+HTML_SPACER+"<p>";
					}
					
					message.body = newBody;
				}				
				
				if (message && t1 && t1.textDisplay){
					StyleableTextField(t1.textDisplay).htmlText = message.body;
				}
				
				
			}
			
			
			private function updateComplete():void
			{
				var textDisplay:StyleableTextField = t1.textDisplay as StyleableTextField;
			}
		]]>
	</fx:Script>
	
	<s:navigationContent>
		<components:RoboIconButton width="100%" height="100%" source="{ImageManager.BackIcon}" click="navigator.popView()"/>
	</s:navigationContent>
	
	<s:titleContent>
		<s:Label id="titleLabel" text="{title}" styleName="viewTitle"/>
	</s:titleContent>
	
	<s:Scroller width="100%" height="100%">
		<s:VGroup width="100%" gap="15" paddingTop="30" paddingBottom="30" paddingLeft="20" paddingRight="20">
			<s:Label width="100%" text="{message.subject}" styleName="messageSubject"/>
			
			<s:TextArea id="t1" width="100%" height="{height*2}" contentBackgroundAlpha="0" borderVisible="false" styleName="messageBody" 
						paddingLeft="0" mouseEnabled="false" editable="false" selectable="false" updateComplete="updateComplete()"/>
			
		</s:VGroup>
		
	</s:Scroller>
	
</s:View>
